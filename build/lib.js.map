{"version":3,"sources":["js/getPositionOf.js","lib.js"],"names":["getPositionOf","range","prefix","initialOffset","containedIn","containerElement","getPositionContainedIn","rangeContainer","contains","previousSibling","offset","textContent","length","Range","prototype","getIndexOfCharsIn","begin","end"],"mappings":";AAiDC,aAlCM,SAASA,EAAcC,EAAOC,GAC7BC,IAAAA,EAAgBF,EAAMC,EAAS,UAE9B,MAAA,CACLE,YAAa,SAAAC,GACXC,OAAAA,EACED,EACAJ,EAAMC,EAAS,aACfC,KAWR,SAASG,EACPD,EACAE,EACAJ,GAEI,IAACE,EAAiBG,SAASD,GAAiB,OAAQ,EAIjDE,IAHHA,IAAAA,EAAkBF,EAAeE,gBACjCC,EAASP,EAENM,GACLC,EAASD,EAAgBE,YAAYC,OAASF,EAC9CD,EAAkBA,EAAgBA,gBAG7BC,OAAAA,EACR,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EAjDDG,MAAMC,UAAUC,kBAAoB,SAClCV,GAEO,MAAA,CACLW,MAAOhB,EAAc,KAAM,SAASI,YAAYC,GAChDY,IAAKjB,EAAc,KAAM,OAAOI,YAAYC;;ACLhD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,gBAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,iBAAA,IAAA,EAAA,QAAA","file":"lib.js","sourceRoot":"..\\src","sourcesContent":["Range.prototype.getIndexOfCharsIn = function getIndexOfCharsIn(\r\n  containerElement\r\n) {\r\n  return {\r\n    begin: getPositionOf(this, 'start').containedIn(containerElement),\r\n    end: getPositionOf(this, 'end').containedIn(containerElement)\r\n  };\r\n};\r\n\r\n/**\r\n * Get the position of the begin | end of the character in the current selection\r\n * @param {Range} range\r\n * @param {\"start\"| \"end\"} prefix\r\n * @returns {{containedIn: (containerElement: HTMLElement) => number}}\r\n */\r\nexport function getPositionOf(range, prefix) {\r\n  const initialOffset = range[prefix + 'Offset'];\r\n\r\n  return {\r\n    containedIn: containerElement =>\r\n      getPositionContainedIn(\r\n        containerElement,\r\n        range[prefix + 'Container'],\r\n        initialOffset\r\n      )\r\n  };\r\n}\r\n\r\n/**\r\n *\r\n * @param {HTMLElement} containerElement\r\n * @param {HTMLElement} rangeContainer\r\n * @param {number} initialOffset\r\n */\r\nfunction getPositionContainedIn(\r\n  containerElement,\r\n  rangeContainer,\r\n  initialOffset\r\n) {\r\n  if (!containerElement.contains(rangeContainer)) return -1;\r\n  let previousSibling = rangeContainer.previousSibling;\r\n  let offset = initialOffset;\r\n\r\n  while (previousSibling) {\r\n    offset = previousSibling.textContent.length + offset;\r\n    previousSibling = previousSibling.previousSibling;\r\n  }\r\n\r\n  return offset;\r\n}\r\n","export { getPositionOf } from './js/getPositionOf';\r\n"]}